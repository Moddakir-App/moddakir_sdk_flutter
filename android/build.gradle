group = "com.moddakir.call"
version = "1.0-SNAPSHOT"

buildscript {
    
    ext.compose_version = '1.0.3'
    ext.kotlin_version = "1.7.10"
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:7.3.0")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        // flatDir {
        //     dirs 'libs'
        // }
    }

    
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    if (project.android.hasProperty("namespace")) {
        namespace = "com.moddakir.call"
    }

    compileSdk = 34

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 21
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion '1.5.30'
    }

    dependencies {
        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.0.0")


         implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.security:security-crypto:1.1.0-alpha03'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    implementation 'io.agora.rtc:full-sdk:4.3.2'
    implementation 'io.agora.rtm:rtm-sdk:2.1.12'
    api "io.reactivex.rxjava2:rxandroid:2.1.1"
    api "io.reactivex.rxjava2:rxjava:2.2.17"
    api 'pub.devrel:easypermissions:3.0.0'
//    implementation 'androidx.test:monitor:1.5.2'
//    implementation 'androidx.test.ext:junit-ktx:1.1.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    api 'com.jakewharton.timber:timber:4.7.1'
    api "com.squareup.retrofit2:converter-gson:2.8.1"
    api "com.squareup.retrofit2:adapter-rxjava2:2.3.0"
    api 'de.hdodenhof:circleimageview:3.0.1'
    api 'com.github.f0ris.sweetalert:library:1.6.2'
    api "com.squareup.okhttp3:logging-interceptor:4.9.1"
    api "com.github.chuckerteam.chucker:library:3.5.2"
    implementation 'com.google.android.material:material:1.6.1'
    testImplementation 'junit:junit:4.13.2'
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.1"
    api 'com.akexorcist:localization:1.2.11'
    api "com.squareup.retrofit2:converter-gson:2.8.1"
    api "com.squareup.retrofit2:adapter-rxjava2:2.3.0"
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation 'com.quickbirdstudios:survey:2.0.0-alpha-4'
    implementation 'com.android.support:support-v4:28.0.0'
    api 'com.intuit.sdp:sdp-android:1.0.6'

        // // implementation project(':random-call')
        // implementation(name: 'mod_lib', ext: 'aar')

        // implementation 'androidx.appcompat:appcompat:1.2.0'
        // implementation "com.google.android.material:material:1.3.0"

        // // implementation fileTree(dir: 'libs', include: ['*.aar'])
        // // implementation(name:'aar_name_here', ext:'aar')

        // // // Add moddakir-sdk.aar path
        // // implementation(dir("libs/moddakir-sdk-v1.0.5.aar"))

        // // implementation fileTree(dir: 'libs', include: ['*.*'])
        
        // // api fileTree(dir: "libs", include: ["*.aar"])

        // // // Circle Imageview
        // implementation("de.hdodenhof:circleimageview:3.0.1")

        // // Localization
        // implementation("com.akexorcist:localization:1.2.11")

        // // Agora
        // implementation("io.agora.rtc:full-sdk:4.3.2")
        // implementation("io.agora.rtm:rtm-sdk:2.1.12")

        // // RxJava
        // implementation("io.reactivex.rxjava2:rxandroid:2.1.1")
        // implementation("io.reactivex.rxjava2:rxjava:2.2.17")

        // // Retrofit
        // implementation("com.squareup.retrofit2:converter-gson:2.8.1")
        // implementation("com.squareup.retrofit2:adapter-rxjava2:2.3.0")

        // // Easy Permissions
        // implementation("pub.devrel:easypermissions:3.0.0")

        // // Timber
        // implementation("com.jakewharton.timber:timber:4.7.1")

        // // implementation(dir("libs/random-call"))
        // // implementation project(path: 'random-call')
        // // implementation project(':random-call').projectDir = new File(rootDir, 'random-call')


    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}

// dependencyResolutionManagement {
//     repositories {
//         flatDir {
//             dirs 'libs'
//         }
//     }
// }


// task copyAAR(type: Copy) {
//     from 'libs/moddakir-sdk-v1.0.5.aar'
//     into "$buildDir/intermediates/aar_res/debug" // This ensures AAR is copied during build
// }

// afterEvaluate {
//     tasks.getByName("preBuild").dependsOn(copyAAR)
// }